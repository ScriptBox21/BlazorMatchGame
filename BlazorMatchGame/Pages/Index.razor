@page "/"

<style>
    .container {
        width: 400px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="container">
    <div class="row">
        @foreach (var animal in shuffledAnimals)
        {
            <div class="col-md-3">
                <button @onclick="@(() => ButtonClick(animal))" type="button" class="btn btn-outline-dark">@animal</button>
            </div>
        }
    </div>
    <h2>Matches found: @matchesFound</h2>
</div>

@code {
    List<string> animalEmoji = new List<string>()
    {
               "🐶","🐶",
               "🐺","🐺",
               "🐮","🐮",
               "🦊","🦊",
               "🐱","🐱",
               "🦁","🦁",
               "🐯","🐯",
               "🐹","🐹",
            };

    List<string> shuffledAnimals = default;
    string lastAnimalFound = string.Empty;
    int matchesFound = 0;

    protected override void OnInitialized()
    {
        SetUpGame();
    }

    private void SetUpGame()
    {
        Random random = new Random();
        shuffledAnimals = animalEmoji
            .OrderBy(item => random.Next())
            .ToList();

        matchesFound = 0;
    }

    private void ButtonClick(string animal)
    {
        if (lastAnimalFound == string.Empty)
        {
            lastAnimalFound = animal;
            return;
        }
        else if (lastAnimalFound == animal)
        {
            lastAnimalFound = string.Empty;

            //Replace found animals with empty string to hide them
            shuffledAnimals = shuffledAnimals
                .Select(a => a.Replace(animal, string.Empty))
                .ToList();

            matchesFound++;
            if (matchesFound == 8)
            {
                SetUpGame();
            }
        }
    }
}